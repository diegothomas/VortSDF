general {
    base_exp_dir = Exp/DATA_NAME
}

dataset {
    data_dir = Data/DATA_NAME/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
    data_type = BMVS #TANKS_AND_TEMPLES #BMVS #
}

train {
    learning_rate = [1e-4, 1e-3, 1e-3, 1e-3, 5e-4, 5e-4]
    learning_rate_sdf = [1e-2, 1e-2, 1e-2, 1e-3, 1e-3, 1e-3]
    learning_rate_feat = [1e-2, 1e-2, 1e-2, 1e-3, 1e-3, 1e-3]
    learning_rate_cvt = [1e-3, 5e-4, 1e-4, 5e-5, 1e-5, 5e-6]
    learning_rate_alpha = [1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-3]
    
    mask_weight = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    eik_weight = [1e-5, 1e-3, 1e-3, 1e-5, 1e-5, 1e-5]
    tv_weight = [1e-4, 1e-5, 1e-5, 1e-5, 1e-5, 1e-5]
    tv_f_weight = [1e-10, 1e-9, 1e-8, 1e-8, 1e-9, 1e-10] #1e-6
    smooth_weight = [1e-1, 1e-2, 1e-2, 5e-3, 5e-3, 5e-3]

    end_iter = 40000

    batch_size = 8192 #442368 #2048 #10240 #5120 #4096 #5120 #8192 #1024

    report_freq = 100
    val_freq = 5000
    CVT_freq = 10
    dim_feats = 32 #32
    res = 16
    knn = 24
    hlvl = 3
}


model {

    sdf_network {
        dout = 257
        din = 9
        dhidden = 32
        nlayers = 2
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 3.0
        geometric_init = True
        weight_norm = True
    }
    
    color_geo_network {
        d_in = 73 #106 #88 #114 #56
        rgbnet_width = 124 # 160
        rgbnet_depth = 4
        scale = 3.0
    }
    
    color_network {
        d_in = 92   #73 #97#109 #91 #117 #63 #68 #86 #53 #41 #74 #77 68 # 56 # 
        rgbnet_width = 124
        rgbnet_depth = 4
        scale = 3.0
    }

    cvt_renderer {
        n_samples = 512
    }
}